{"ast":null,"code":"var _jsxFileName = \"/Users/geunseonkim/react/hnm-react-router-practice/src/page/ProductDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductDetail = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [product, setProduct] = uesState(null); // 3. api data를 state에 저장!\n  const getProductDetail = async () => {\n    let url = ` http://localhost:4000/products/${id}`; // 1. 이 id 숫자를 읽어서 json 서버에 보내준다. -> useParams\n    let response = await fetch(url);\n    let data = await response.json();\n    console.log(\"ddd\", data); // 2. data를 확인했으면 이제 UI에 보여주면 된다!\n    setProduct(data);\n  };\n  useEffect(() => {\n    getProductDetail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product === null || product === void 0 ? void 0 : product.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \" // product \\uC548\\uC5D0 img src\\uAC00 \\uB2F4\\uACA8 \\uC788\\uC74C! product\\uAC00 \\uC788\\uB2E4\\uBA74 img\\uB97C \\uBCF4\\uC5EC\\uC900\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: product === null || product === void 0 ? void 0 : product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: product === null || product === void 0 ? void 0 : product.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductDetail, \"WTkzVJt056/9vEFrj9nX40yNcDw=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetail;\nexport default ProductDetail;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","useParams","jsxDEV","_jsxDEV","ProductDetail","_s","id","product","setProduct","uesState","getProductDetail","url","response","fetch","data","json","console","log","children","src","img","fileName","_jsxFileName","lineNumber","columnNumber","title","price","_c","$RefreshReg$"],"sources":["/Users/geunseonkim/react/hnm-react-router-practice/src/page/ProductDetail.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom'\n\nconst ProductDetail = () => {\n  let{id} = useParams();\n  const [product, setProduct] = uesState(null) // 3. api data를 state에 저장!\n  const getProductDetail = async() => {\n    let url = ` http://localhost:4000/products/${id}` // 1. 이 id 숫자를 읽어서 json 서버에 보내준다. -> useParams\n    let response = await fetch(url)\n    let data = await response.json();\n    console.log(\"ddd\",data); // 2. data를 확인했으면 이제 UI에 보여주면 된다!\n    setProduct(data);\n  }\n  useEffect(()=>{\n    getProductDetail()\n  },[])\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <img src={product?.img}/> // product 안에 img src가 담겨 있음! product가 있다면 img를 보여준다.\n        </Col>\n        <Col>\n          <div>{product?.title}</div>\n          <div>{product?.price}</div>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default ProductDetail\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,IAAG;IAACC;EAAE,CAAC,GAAGL,SAAS,CAAC,CAAC;EACrB,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC,EAAC;EAC7C,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAW;IAClC,IAAIC,GAAG,GAAI,mCAAkCL,EAAG,EAAC,EAAC;IAClD,IAAIM,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IAC/B,IAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACH,IAAI,CAAC,CAAC,CAAC;IACzBN,UAAU,CAACM,IAAI,CAAC;EAClB,CAAC;EACDlB,SAAS,CAAC,MAAI;IACZc,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEP,OAAA,CAACL,SAAS;IAAAoB,QAAA,eACRf,OAAA,CAACJ,GAAG;MAAAmB,QAAA,gBACFf,OAAA,CAACH,GAAG;QAAAkB,QAAA,gBACFf,OAAA;UAAKgB,GAAG,EAAEZ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,0IAC3B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrB,OAAA,CAACH,GAAG;QAAAkB,QAAA,gBACFf,OAAA;UAAAe,QAAA,EAAMX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEkB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3BrB,OAAA;UAAAe,QAAA,EAAMX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEmB;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAAnB,EAAA,CA3BKD,aAAa;EAAA,QACPH,SAAS;AAAA;AAAA0B,EAAA,GADfvB,aAAa;AA6BnB,eAAeA,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}