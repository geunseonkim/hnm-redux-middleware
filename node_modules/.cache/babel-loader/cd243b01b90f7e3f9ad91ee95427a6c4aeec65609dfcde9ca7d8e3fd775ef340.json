{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nlet initialState = {\n  productList: [],\n  product: null,\n  isLoading: false,\n  error: null\n};\nexport const fetchProducts = createAsyncThunk('product/fetchAll', async (searchQuery, thunkApi) => {\n  try {\n    let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products?q=${searchQuery}`;\n    let response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const fetchDetailProducts = createAsyncThunk('product/fetchAll', async (id, thunkApi) => {\n  try {\n    let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products/${id}`;\n    let response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    thunkApi.rejectWithValue(error.message);\n  }\n});\n\n// function productReducer(state=initialState, action) {\n//     let {type, payload} = action\n//     switch(type) {\n//         case \"GET_PRODUCT_SUCCESS\":\n//             return {...state, productList: payload.data}\n\n//         case \"GET_DETAIL_SUCCESS\":\n//             return {...state, product: payload.data}\n\n//         default:\n//             return {...state}\n//     }\n// }\n\n// export default productReducer\n\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    // getAllProducts(state, action){\n    //     state.productList= action.payload.data\n    // },\n    // getSingleProduct(state, action){\n    //     state.product= action.payload.data\n    // },\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.productList = action.payload;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nconst ProductDetailSlice = creatSlice({\n  name: \"detailProduct\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchDetailProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchDetailProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.product = action.payload;\n    }).addCase(fetchDetailProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nconsole.log(\"ppp\", productSlice);\nexport const productActions = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","productList","product","isLoading","error","fetchProducts","searchQuery","thunkApi","url","response","fetch","json","rejectWithValue","message","fetchDetailProducts","id","productSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","ProductDetailSlice","creatSlice","console","log","productActions","actions","reducer"],"sources":["/Users/geunseonkim/react/hnm-redux-middleware/src/redux/reducers/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nlet initialState={\n    productList: [],\n    product: null,\n    isLoading: false,\n    error: null,\n}\n\nexport const fetchProducts = createAsyncThunk('product/fetchAll',async(searchQuery,thunkApi)=>{\n    try{\n        let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products?q=${searchQuery}`;\n        let response = await fetch(url)\n        return await response.json();\n    }catch(error){\n        thunkApi.rejectWithValue(error.message)\n    }\n})\n\nexport const fetchDetailProducts = createAsyncThunk('product/fetchAll',async(id, thunkApi)=>{\n    try{\n        let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products/${id}`;\n        let response = await fetch(url)\n        return await response.json();\n    }catch(error){\n        thunkApi.rejectWithValue(error.message)\n    }\n})\n\n// function productReducer(state=initialState, action) {\n//     let {type, payload} = action\n//     switch(type) {\n//         case \"GET_PRODUCT_SUCCESS\":\n//             return {...state, productList: payload.data}\n\n//         case \"GET_DETAIL_SUCCESS\":\n//             return {...state, product: payload.data}\n\n//         default:\n//             return {...state}\n//     }\n// }\n\n// export default productReducer\n\nconst productSlice = createSlice({\n    name:\"product\",\n    initialState,\n    reducers: {\n        // getAllProducts(state, action){\n        //     state.productList= action.payload.data\n        // },\n        // getSingleProduct(state, action){\n        //     state.product= action.payload.data\n        // },\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchProducts.pending,(state)=>{\n            state.isLoading=true\n        })\n        .addCase(fetchProducts.fulfilled,(state,action)=>{\n            state.isLoading=false\n            state.productList = action.payload;\n        })\n        .addCase(fetchProducts.rejected,(state, action)=>{\n            state.isLoading=false\n            state.error=action.payload\n        })\n    }\n})\n\nconst ProductDetailSlice = creatSlice({\n    name:\"detailProduct\",\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchDetailProducts.pending,(state)=>{\n            state.isLoading=true\n        })\n        .addCase(fetchDetailProducts.fulfilled,(state,action)=>{\n            state.isLoading=false\n            state.product = action.payload;\n        })\n        .addCase(fetchDetailProducts.rejected,(state,action)=>{\n            state.isLoading=false\n            state.error=action.payload\n        })\n    } \n})\n\nconsole.log(\"ppp\", productSlice);\n\nexport const productActions = productSlice.actions\nexport default productSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,IAAIC,YAAY,GAAC;EACbC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE,IAAI;EACbC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGP,gBAAgB,CAAC,kBAAkB,EAAC,OAAMQ,WAAW,EAACC,QAAQ,KAAG;EAC1F,IAAG;IACC,IAAIC,GAAG,GAAI,wFAAuFF,WAAY,EAAC;IAC/G,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IAC/B,OAAO,MAAMC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAChC,CAAC,QAAMP,KAAK,EAAC;IACTG,QAAQ,CAACK,eAAe,CAACR,KAAK,CAACS,OAAO,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAGhB,gBAAgB,CAAC,kBAAkB,EAAC,OAAMiB,EAAE,EAAER,QAAQ,KAAG;EACxF,IAAG;IACC,IAAIC,GAAG,GAAI,sFAAqFO,EAAG,EAAC;IACpG,IAAIN,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IAC/B,OAAO,MAAMC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAChC,CAAC,QAAMP,KAAK,EAAC;IACTG,QAAQ,CAACK,eAAe,CAACR,KAAK,CAACS,OAAO,CAAC;EAC3C;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMG,YAAY,GAAGjB,WAAW,CAAC;EAC7BkB,IAAI,EAAC,SAAS;EACdjB,YAAY;EACZkB,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EACDC,aAAa,EAAGC,OAAO,IAAG;IACtBA,OAAO,CAACC,OAAO,CAAChB,aAAa,CAACiB,OAAO,EAAEC,KAAK,IAAG;MAC3CA,KAAK,CAACpB,SAAS,GAAC,IAAI;IACxB,CAAC,CAAC,CACDkB,OAAO,CAAChB,aAAa,CAACmB,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAC7CF,KAAK,CAACpB,SAAS,GAAC,KAAK;MACrBoB,KAAK,CAACtB,WAAW,GAAGwB,MAAM,CAACC,OAAO;IACtC,CAAC,CAAC,CACDL,OAAO,CAAChB,aAAa,CAACsB,QAAQ,EAAC,CAACJ,KAAK,EAAEE,MAAM,KAAG;MAC7CF,KAAK,CAACpB,SAAS,GAAC,KAAK;MACrBoB,KAAK,CAACnB,KAAK,GAACqB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,MAAME,kBAAkB,GAAGC,UAAU,CAAC;EAClCZ,IAAI,EAAC,eAAe;EACpBjB,YAAY;EACZkB,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAG;IACtBA,OAAO,CAACC,OAAO,CAACP,mBAAmB,CAACQ,OAAO,EAAEC,KAAK,IAAG;MACjDA,KAAK,CAACpB,SAAS,GAAC,IAAI;IACxB,CAAC,CAAC,CACDkB,OAAO,CAACP,mBAAmB,CAACU,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MACnDF,KAAK,CAACpB,SAAS,GAAC,KAAK;MACrBoB,KAAK,CAACrB,OAAO,GAAGuB,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC,CACDL,OAAO,CAACP,mBAAmB,CAACa,QAAQ,EAAC,CAACJ,KAAK,EAACE,MAAM,KAAG;MAClDF,KAAK,CAACpB,SAAS,GAAC,KAAK;MACrBoB,KAAK,CAACnB,KAAK,GAACqB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEFI,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEf,YAAY,CAAC;AAEhC,OAAO,MAAMgB,cAAc,GAAGhB,YAAY,CAACiB,OAAO;AAClD,eAAejB,YAAY,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}