{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nlet initialState = {\n  productList: [],\n  product: null,\n  isLoading: false,\n  error: null\n};\nexport const fetchProducts = createAsyncThunk('product/fetchAll', async (searchQuery, thunkApi) => {\n  try {\n    let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products?q=${searchQuery}`;\n    let response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const fetchDetailProducts = createAsyncThunk('product/fetchDetail', async (id, thunkApi) => {\n  try {\n    let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products/${id}`;\n    let response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    thunkApi.rejectWithValue(error.message);\n  }\n});\n\n// function productReducer(state=initialState, action) {\n//     let {type, payload} = action\n//     switch(type) {\n//         case \"GET_PRODUCT_SUCCESS\":\n//             return {...state, productList: payload.data}\n\n//         case \"GET_DETAIL_SUCCESS\":\n//             return {...state, product: payload.data}\n\n//         default:\n//             return {...state}\n//     }\n// }\n\n// export default productReducer\n\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    // getAllProducts(state, action){\n    //     state.productList= action.payload.data\n    // },\n    getSingleProduct(state, action) {\n      state.product = action.payload.data;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.productList = action.payload;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }).addCase(fetchDetailProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchDetailProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.product = action.payload;\n    }).addCase(fetchDetailProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\n\n// const ProductDetailSlice = createSlice({\n//     name:\"detailProduct\",\n//     initialState,\n//     reducers: {},\n//     extraReducers: (builder)=>{\n//         builder.addCase(fetchDetailProducts.pending,(state)=>{\n//             state.isLoading=true\n//         })\n//         .addCase(fetchDetailProducts.fulfilled,(state,action)=>{\n//             state.isLoading=false\n//             state.product = action.payload;\n//         })\n//         .addCase(fetchDetailProducts.rejected,(state,action)=>{\n//             state.isLoading=false\n//             state.error=action.payload\n//         })\n//     } \n// })\n\nconsole.log(\"ppp\", productSlice);\n// console.log(\"ddd\", ProductDetailSlice);\n\nexport const productActions = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","productList","product","isLoading","error","fetchProducts","searchQuery","thunkApi","url","response","fetch","json","rejectWithValue","message","fetchDetailProducts","id","productSlice","name","reducers","getSingleProduct","state","action","payload","data","extraReducers","builder","addCase","pending","fulfilled","rejected","console","log","productActions","actions","reducer"],"sources":["/Users/geunseonkim/react/hnm-redux-middleware/src/redux/reducers/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nlet initialState={\n    productList: [],\n    product: null,\n    isLoading: false,\n    error: null,\n}\n\nexport const fetchProducts = createAsyncThunk('product/fetchAll',async(searchQuery,thunkApi)=>{\n    try{\n        let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products?q=${searchQuery}`;\n        let response = await fetch(url)\n        return await response.json();\n    }catch(error){\n        thunkApi.rejectWithValue(error.message)\n    }\n})\n\nexport const fetchDetailProducts = createAsyncThunk('product/fetchDetail',async(id, thunkApi)=>{\n    try{\n        let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products/${id}`;\n        let response = await fetch(url)\n        return await response.json();\n    }catch(error){\n        thunkApi.rejectWithValue(error.message)\n    }\n})\n\n// function productReducer(state=initialState, action) {\n//     let {type, payload} = action\n//     switch(type) {\n//         case \"GET_PRODUCT_SUCCESS\":\n//             return {...state, productList: payload.data}\n\n//         case \"GET_DETAIL_SUCCESS\":\n//             return {...state, product: payload.data}\n\n//         default:\n//             return {...state}\n//     }\n// }\n\n// export default productReducer\n\nconst productSlice = createSlice({\n    name:\"product\",\n    initialState,\n    reducers: {\n        // getAllProducts(state, action){\n        //     state.productList= action.payload.data\n        // },\n        getSingleProduct(state, action){\n            state.product= action.payload.data\n        },\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchProducts.pending,(state)=>{\n            state.isLoading=true\n        })\n        .addCase(fetchProducts.fulfilled,(state,action)=>{\n            state.isLoading=false\n            state.productList = action.payload;\n        })\n        .addCase(fetchProducts.rejected,(state, action)=>{\n            state.isLoading=false\n            state.error=action.payload\n        })\n        .addCase(fetchDetailProducts.pending,(state)=>{\n            state.isLoading=true\n        })\n        .addCase(fetchDetailProducts.fulfilled,(state,action)=>{\n            state.isLoading=false\n            state.product = action.payload;\n        })\n        .addCase(fetchDetailProducts.rejected,(state,action)=>{\n            state.isLoading=false\n            state.error=action.payload\n        })\n    }\n})\n\n// const ProductDetailSlice = createSlice({\n//     name:\"detailProduct\",\n//     initialState,\n//     reducers: {},\n//     extraReducers: (builder)=>{\n//         builder.addCase(fetchDetailProducts.pending,(state)=>{\n//             state.isLoading=true\n//         })\n//         .addCase(fetchDetailProducts.fulfilled,(state,action)=>{\n//             state.isLoading=false\n//             state.product = action.payload;\n//         })\n//         .addCase(fetchDetailProducts.rejected,(state,action)=>{\n//             state.isLoading=false\n//             state.error=action.payload\n//         })\n//     } \n// })\n\nconsole.log(\"ppp\", productSlice);\n// console.log(\"ddd\", ProductDetailSlice);\n\nexport const productActions = productSlice.actions\nexport default productSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}