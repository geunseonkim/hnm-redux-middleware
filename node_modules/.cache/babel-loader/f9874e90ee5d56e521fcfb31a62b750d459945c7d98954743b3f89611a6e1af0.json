{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nlet initialState = {\n  productList: [],\n  product: null\n};\nconst getProducts = createAsyncThunk('product/fetchAll', async (searchQuery, thunkApi) => {\n  let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products?q=${searchQuery}`;\n  let response = await fetch(url);\n  return await response.json();\n});\n\n// function productReducer(state=initialState, action) {\n//     let {type, payload} = action\n//     switch(type) {\n//         case \"GET_PRODUCT_SUCCESS\":\n//             return {...state, productList: payload.data}\n\n//         case \"GET_DETAIL_SUCCESS\":\n//             return {...state, product: payload.data}\n\n//         default:\n//             return {...state}\n//     }\n// }\n\n// export default productReducer\n\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    getAllProducts(state, action) {\n      state.productList = action.payload.data;\n    },\n    getSingleProduct(state, action) {\n      state.product = action.payload.data;\n    }\n  }\n});\nconsole.log(\"ppp\", productSlice);\nexport const productActions = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","productList","product","getProducts","searchQuery","thunkApi","url","response","fetch","json","productSlice","name","reducers","getAllProducts","state","action","payload","data","getSingleProduct","console","log","productActions","actions","reducer"],"sources":["/Users/geunseonkim/react/hnm-redux-middleware/src/redux/reducers/productReducer.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nlet initialState={\n    productList: [],\n    product: null\n}\n\nconst getProducts = createAsyncThunk('product/fetchAll',async(searchQuery,thunkApi)=>{\n    let url = `https://my-json-server.typicode.com/geunseonkim/hnm-react-router-practice/products?q=${searchQuery}`;\n    let response = await fetch(url)\n    return await response.json();\n\n})\n\n// function productReducer(state=initialState, action) {\n//     let {type, payload} = action\n//     switch(type) {\n//         case \"GET_PRODUCT_SUCCESS\":\n//             return {...state, productList: payload.data}\n\n//         case \"GET_DETAIL_SUCCESS\":\n//             return {...state, product: payload.data}\n\n//         default:\n//             return {...state}\n//     }\n// }\n\n// export default productReducer\n\nconst productSlice = createSlice({\n    name:\"product\",\n    initialState,\n    reducers: {\n        getAllProducts(state, action){\n            state.productList= action.payload.data\n        },\n        getSingleProduct(state, action){\n            state.product= action.payload.data\n        },\n    },\n})\n\nconsole.log(\"ppp\", productSlice);\n\nexport const productActions = productSlice.actions\nexport default productSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,IAAIC,YAAY,GAAC;EACbC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,WAAW,GAAGL,gBAAgB,CAAC,kBAAkB,EAAC,OAAMM,WAAW,EAACC,QAAQ,KAAG;EACjF,IAAIC,GAAG,GAAI,wFAAuFF,WAAY,EAAC;EAC/G,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EAC/B,OAAO,MAAMC,QAAQ,CAACE,IAAI,CAAC,CAAC;AAEhC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMC,YAAY,GAAGX,WAAW,CAAC;EAC7BY,IAAI,EAAC,SAAS;EACdX,YAAY;EACZY,QAAQ,EAAE;IACNC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACzBD,KAAK,CAACb,WAAW,GAAEc,MAAM,CAACC,OAAO,CAACC,IAAI;IAC1C,CAAC;IACDC,gBAAgBA,CAACJ,KAAK,EAAEC,MAAM,EAAC;MAC3BD,KAAK,CAACZ,OAAO,GAAEa,MAAM,CAACC,OAAO,CAACC,IAAI;IACtC;EACJ;AACJ,CAAC,CAAC;AAEFE,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEV,YAAY,CAAC;AAEhC,OAAO,MAAMW,cAAc,GAAGX,YAAY,CAACY,OAAO;AAClD,eAAeZ,YAAY,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}